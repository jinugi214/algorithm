import java.io.IOException;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);

        int T = sc.nextInt();

        int[][] dp = new int[10001][4];

        /*
        1, 2, 3만 사용 가능 (수의 순서 달라도 같은 것)
        1 -> 1
        2 -> 1+1, 2
        3 -> 1+1+1, 2+1, 3
        4 -> 1+1+1+1, 2+1+1, 2+2, 3+1
        5 -> 1+1+1+1+1, 2+1+1+1, 2+2+1, 3+1+1, 3+2
        6 -> 1+1+1+1+1+1, 2+1+1+1+1 , 2+2+1+1, 2+2+2, 3+1+1+1, 3+2+1, 3+3
        7 -> 1+1+1+1+1+1+1, 2+1+1+1+1+1 , 2+2+1+1+1, 2+2+2+1, 3+1+1+1+1, 3+2+1+1, 3+2+2, 3+3+1
        8 -> 1+1+1+1+1+1+1+1, 2+1+1+1+1+1+1, 2+2+1+1+1+1, 2+2+2+1+1, 2+2+2+2, 3+1+1+1+1+1, 3+2+1+1+1, 3+2+2+1, 3+3+1+1, 3+3+2
        1은 이전 인덱스에 1만 더한 경우
        2는 i-2의 1,2의 값들에 2만 더한 경우
        3은 i-3의 1, 2, 3의 값들에 3만 더한 경우
        */

        dp[1][1] = 1;
        dp[2][1] = 1;
        dp[2][2] = 1;
        dp[3][1] = 1;
        dp[3][2] = 1;
        dp[3][3] = 1;


        for(int i = 4; i < 10001; i++){
            dp[i][1] = dp[i-1][1];
            dp[i][2] = dp[i-2][1] + dp[i-2][2];
            dp[i][3] = dp[i-3][1] + dp[i-3][2] + dp[i-3][3];
        }

        for(int i = 0; i<T; i++){
            int n = sc.nextInt();
            System.out.println(dp[n][1] + dp[n][2] + dp[n][3]);

        }
    }
}